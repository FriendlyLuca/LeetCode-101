/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> queue=new LinkedList<TreeNode>();
        List<List<Integer>> ans=new ArrayList<List<Integer>>();
        queue.offer(root);
        while(queue.size()>0&&root!=null){//root!=null是因为不想把空的list传到ans中
            int size=queue.size();
            List<Integer> samelayer=new ArrayList<Integer>();
            for (int i=0;i<size;i++){
                TreeNode node=queue.poll();
                if (node==null)
                    continue;
                samelayer.add(node.val);
                if (node.left!=null)
                    queue.offer(node.left);
                if (node.right!=null)
                    queue.offer(node.right);
            }
            ans.add(samelayer);
        }
        return ans;
    }
}
