//Binary Search(算法复杂度应该是O((m+n)logm))，n和m是arr1与arr2的长度，但提交运行之后总是比直接套两层循环要慢
class Solution {
    public int findTheDistanceValue(int[] arr1, int[] arr2, int d) {
        Arrays.sort(arr2);
        int dis=0;
        for (int i=0;i<arr1.length;i++){
            int l=0,r=arr2.length-1;
            int min=Math.abs(arr1[i]-arr2[r]);
            while(l<=r){
                int mid=(r-l)/2+l;
                if (arr2[mid]>arr1[i]){
                    r=mid-1;
                }else{
                    l=mid+1;
                }
            }
            if (r==-1)
                min=arr2[0]-arr1[i];
            else if (l==arr2.length)
                min=arr1[i]-arr2[arr2.length-1];
            else{
                min=Math.min(arr1[i]-arr2[r],arr2[l]-arr1[i]);
            }
            if (min<=d)
                dis++;
        }
        return arr1.length-dis;
    }
}

//直接算
class Solution {
    public int findTheDistanceValue(int[] arr1, int[] arr2, int d) {
        int dis=0;
        for (int i=0;i<arr1.length;i++){
            int j=arr2.length-1;
            for (;j>=0;j--){
                if (Math.abs(arr1[i]-arr2[j])<=d){
                    break;
                }
            }
            if (j==-1)
                dis++;
        }
        return dis;
    }
}
