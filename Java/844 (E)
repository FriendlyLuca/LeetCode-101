class Solution {
    public boolean backspaceCompare(String s, String t) {
        Stack<Character> st1=new Stack<Character>();
        Stack<Character> st2=new Stack<Character>();
        for (int i=0;i<s.length();i++){
            char c=s.charAt(i);
            if (c=='#'){
                if (!st1.empty()){
                    st1.pop();
                }
            }
            else{
                st1.push(c);
            }
        }
        for (int i=0;i<t.length();i++){
            char c=t.charAt(i);
            if (c=='#'){
                if (!st2.empty()){
                    st2.pop();
                }
            }
            else{
                st2.push(c);
            }
        }
        System.out.println(st1);
        System.out.println(st2);
        // while(!st1.empty()&&!st2.empty()){
        //     if (st1.size()!=st2.size()||st1.pop()!=st2.pop())
        //         return false;
        // }
        return st1.equals(st2);
    }
}

//或者倒着插入字符串中的字符，已有几个#就跳过之后的几个非#字符，最后来比较
class Solution {
    public boolean backspaceCompare(String s, String t) {
        return getRS(s).equals(getRS(t));
    }
    private String getRS(String s){
        String res="";
        int b=0;
        for (int i=s.length()-1;i>=0;i--){
            char c=s.charAt(i);
            if (c=='#'){
                b++;
            }else if (b>0){
                b--;
            }else{
                res+=c;
            }
        }
        return res;
    }
}
