class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        TreeNode root=conM(nums,0,nums.length-1);
        return root;
    }
    public TreeNode conM(int[] nums,int l,int r){
        if (l>r)
            return null;
        int mid=findMax(l,r,nums);
        TreeNode root=new TreeNode(nums[mid]);
        root.left=conM(nums,l,mid-1);
        root.right=conM(nums,mid+1,r);
        return root;
    }
    public int findMax(int l,int r,int[] nums){
        int max=nums[l];
        int index=l;
        for (int i=l;i<=r;i++){
            if (max<nums[i]){
                max=nums[i];
                index=i;
            }
        }
        return index;
    }
}
