class Solution {
    public int specialArray(int[] nums) {
        Arrays.sort(nums);
        int l=1,r=nums.length;
        while(l<=r){//二分法找出大于等于自身值的那个长度
            int mid=(r-l)/2+l;
            if (nums[nums.length-mid]<mid){
                r=mid-1;;
            }else{
                l=mid+1;
            }
        }
        if (r==0||(nums.length-r>0&&nums[nums.length-r-1]>=r))//得出的r是长度。但是要验证上一位是否小于r，不小于r或者长度为0都返回-1
            return -1;
        else
            return r;
    }
}
//用for循环直接找简单多了。也不用验证。就是慢了一些
class Solution {
    public int specialArray(int[] nums) {
        Arrays.sort(nums);
        for(int i=1;i<=nums.length;i++){
            if (nums[nums.length-i]>=i&&(i==nums.length||nums[nums.length-i-1]<i))
            return i;
        }
        return -1;
    }
}
