class Solution {
    public int maxDepth(TreeNode root) {
        if (root==null)
            return 0;
        else
            return Math.max(maxDepth(root.left),maxDepth(root.right))+1;
    }
}
// level order
class Solution {
    public int maxDepth(TreeNode root) {
        int max=0;
        Queue<TreeNode> queue=new LinkedList<TreeNode>();
        queue.offer(root);
        while(queue.size()>0&&root!=null){
            int size=queue.size();
            for (int i=0;i<size;i++){
                TreeNode temp =queue.poll();
                if (temp==null)
                    continue;
                if (temp.left!=null)
                    queue.offer(temp.left);
                if (temp.right!=null)
                    queue.offer(temp.right);
            }
            max++;
        }
        return max;
    }
}
