class ListNode{
    int val;
    ListNode next;
    ListNode(){}
    ListNode(int val){
        this.val=val;
        this.next=null;
    }
    
}
class MyLinkedList {
    int size;
    ListNode head;
    public MyLinkedList() {
        head=new ListNode(0);
        size=0;
    }
    
    public int get(int index) {
        int num=0;
        ListNode p=head.next;
        while(p!=null){
            if (num==index){
                break;
            }else{
                num++;
                p=p.next;
            }
        }
        return p==null?-1:p.val;
    }
    
    public void addAtHead(int val) {
        ListNode q=new ListNode(val);
        q.next=head.next;
        head.next=q;
        size++;
    }
    
    public void addAtTail(int val) {
        ListNode q=head;
        while(q.next!=null){
            q=q.next;
        }
        ListNode p=new ListNode(val);
        q.next=p;
        size++;
    }
    
    public void addAtIndex(int index, int val) {
        if (index>size)
            return;
        ListNode pre=NI(index-1);
        ListNode p=new ListNode(val);
        p.next=pre.next;
        pre.next=p;
        size++;
    }
    
    public void deleteAtIndex(int index) {
        if (index>=size)
            return;
        ListNode pre=NI(index-1);
        pre.next=pre.next.next;
        size--;
    }
    
    private ListNode NI(int index){
        if (index==-1)
            return head;
        int i=0;
        ListNode p=head.next;
        while(i!=index){
            p=p.next;
            i++;
        }
        return p;
    }
}

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList obj = new MyLinkedList();
 * int param_1 = obj.get(index);
 * obj.addAtHead(val);
 * obj.addAtTail(val);
 * obj.addAtIndex(index,val);
 * obj.deleteAtIndex(index);
 */
