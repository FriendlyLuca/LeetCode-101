//中序遍历BST时记录出现次数最多的数加入答案序列中即可
class Solution {
    ArrayList<Integer> m=new ArrayList<Integer>();
    int time=0;
    int maxt=0;
    int pre=-100001;
    public int[] findMode(TreeNode root) {
        inorder(root);
        int[] ans=new int[m.size()];
        for (int i=0;i<m.size();i++){
            ans[i]=m.get(i);
        }
        return ans;
    }
    public void inorder(TreeNode root){
        if (root==null)
            return;
        inorder(root.left);
        if (root.val>pre){
            time=1;
            pre=root.val;
        }else{
            time++;
        }
        if (maxt<time){
            maxt=time;
            m.clear();//当当前的元素次数超过之前的最大次数时，要清空m后再添加当前值
            m.add(root.val);
        }else if (maxt==time){
            m.add(root.val);
        }
        inorder(root.right);
    }
}
