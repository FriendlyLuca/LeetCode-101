//先讨论中间位置哪边是有序的，再分情况讨论target的在有序的那一半需要的条件，其余为无序那一半
class Solution {
    public int search(int[] nums, int target) {
        int index=-1;
        int l=0,r=nums.length-1;
        while(l<=r){
            int mid=(r-l)/2+l;
            if (nums[mid]==target){
                index=mid;
                break;
            }else if (nums[mid]>nums[r]){
                if (target<nums[mid]&&target>nums[r])
                    r=mid-1;
                else
                    l=mid+1;
            }else{
                if (target>nums[mid]&&target<=nums[r])
                    l=mid+1;
                else
                    r=mid-1;
            }
        }
        return index;
    }

}
