class Solution {
    List<String> result=new ArrayList<String>();
    ArrayList<Integer> queue=new ArrayList<Integer>();
    public List<String> binaryTreePaths(TreeNode root) {
        if (root.left==null&&root.right==null){
            queue.add(root.val);
            String path="";
            for (int i=0;i<queue.size()-1;i++){
                path+=queue.get(i)+"->";
            }
            path+=queue.get(queue.size()-1);
            queue.remove(queue.size()-1);//多少次添加就多少次移除
            result.add(path);
        }
        queue.add(root.val);
        if (root.left!=null){
            binaryTreePaths(root.left);
            queue.remove(queue.size()-1);
        }
        if (root.right!=null){
            binaryTreePaths(root.right);
            queue.remove(queue.size()-1);
        }
        return result;
    }
}
