class Solution {
    public boolean isSymmetric(TreeNode root) {
        if (root==null)
            return true;
        else
            return twoS(root.left,root.right);
        
    }
    
/*Consider it as compare root nodes of two trees first,then compare their child tree in a symmetric way. 
  The reason we need to create twoS is because we need to compare two trees. If we only using one root node,it's hard to compare*/
    private boolean twoS(TreeNode left,TreeNode right){
        if (left==null&&right==null)
            return true;
        else if (left==null||right==null)
            return false;
        if (left.val!=right.val)
            return false;
        return twoS(left.left,right.right)&&twoS(left.right,right.left);
    }
}
