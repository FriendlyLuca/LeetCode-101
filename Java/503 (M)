class Solution {
    public int[] nextGreaterElements(int[] nums) {
        Stack<Integer> s=new Stack<Integer>();
        int[] ans=new int[nums.length];
        Arrays.fill(ans,-1);
        s.push(0);
        boolean l=false;
        for(int i=1;i<nums.length;i++){
            if (nums[i]<=nums[s.peek()]){
                s.push(i);
            }else{
                while(!s.isEmpty()&&nums[i]>nums[s.peek()]){
                    int small=s.pop();
                    // if (ans[small]==-1)//其实都不用判断，因为找的就是右边第一个大于自己的数。每次更新都一样
                        ans[small]=nums[i];
                }
                s.push(i);
            }
            if (i==nums.length-1&&l==false){//循环两次数组
                i=-1;
                l=true;
            }
        }
        return ans;   
    }
}
