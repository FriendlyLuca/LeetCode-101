class Solution {
    List<List<Integer>> ans=new ArrayList<List<Integer>>();
    ArrayList<Integer> path=new ArrayList<Integer>();
    HashSet<Integer> hs=new HashSet<Integer>();
    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {
        dfs(graph,0);
        return ans;
    }
    private void dfs(int[][] graph,int node){
        path.add(node);
        if (node==graph.length-1){
            ans.add(new ArrayList(path));
        }
        for (int i=0;i<graph[node].length;i++){
            if (!hs.contains(graph[node][i])){
                hs.add(graph[node][i]);
                dfs(graph,graph[node][i]);
                hs.remove(graph[node][i]);
                path.remove(path.size()-1);
            }
        }
    }
}
